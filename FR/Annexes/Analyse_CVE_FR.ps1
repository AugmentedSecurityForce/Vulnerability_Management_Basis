<#
.SYNOPSIS
Script pour l'analyse rapide de CVE.

.DESCRIPTION
Pour utiliser le script : .\Calcul_EPSS_v3.ps1 {CVE}

.NOTES
Auteur : Julien Garcia - Augmented Security Force
Version : 1.1
Date de création : 
- juillet 2023 : version initiale
- octobre 2023 : modification pour mettre la CVE en argument

.LINK
Github : https://github.com/AugmentedSecurityForce/Vulnerability_Management_Basis/tree/main/FR
LinkedIn : https://www.linkedin.com/in/jgarcia-cybersec/

.LICENCE
creative commons zero v1.0 universal license (https://creativecommons.org/publicdomain/zero/1.0/deed.fr)

.REQUIRMENT
7zip en version x64, le cas echant faire la modification dans le doc.
#>

param (
    [string]$CVE = $(throw "Veuillez fournir une référence CVE en argument, par exemple: 'CVE-2023-48772'")
)

# Vérifier si l'argument fourni est au format valide
if ($CVE -match "^CVE-\d{4}-\d+") {
    # Définir le chemin du répertoire de destination pour le fichier .gz
    $destinationDirectory = "C:\temp"

    # Nom du fichier .gz à télécharger
    $gzFileName = "epss_scores-current.csv.gz"

    # Nom du fichier décompressé
    $uncompressedFileName = "epss_scores-current.csv"

    # Vérifier si les fichiers existent déjà et les supprimer
    $gzFilePath = Join-Path -Path $destinationDirectory -ChildPath $gzFileName
    $csvFilePath = Join-Path -Path $destinationDirectory -ChildPath $uncompressedFileName

    if (Test-Path $gzFilePath) {
        Remove-Item -Path $gzFilePath -Force
    }

    if (Test-Path $csvFilePath) {
        Remove-Item -Path $csvFilePath -Force
    }

    # Construire l'URL de téléchargement du fichier .gz
    $gzFileUrl = "https://epss.cyentia.com/epss_scores-current.csv.gz"

    # Télécharger le fichier .gz
    Invoke-WebRequest -Uri $gzFileUrl -OutFile $gzFilePath

    # Utiliser 7-Zip pour décompresser le fichier .gz
    & "C:\Program Files\7-Zip\7z.exe" x "$gzFilePath" -o"$destinationDirectory"

    # Charger le CSV depuis le fichier décompressé
    $csvData = Import-Csv $csvFilePath -Header "CVE", "ValeurInutile", "Centile"
    $cveEntry = $csvData | Where-Object { $_.CVE -eq $CVE }

    if ($cveEntry) {
        # Calculer le centile en pourcentage avec deux chiffres après la virgule
        $centilePercentage = [string]::Format("{0:F2}%", [float]($cveEntry.Centile) * 100)

        # Construire l'URL de l'API cve-search.org pour la CVE saisie
        $cveSearchUrl = "https://cve.circl.lu/api/cve/$CVE"

        # Faire une requête HTTP pour obtenir les informations de la CVE depuis cve-search.org
        $cveSearchResponse = Invoke-RestMethod -Uri $cveSearchUrl

        # Extraire les informations spécifiques de cve-search.org
        $datePublication = $cveSearchResponse.Published
        $dateDerniereModification = $cveSearchResponse."last-modified"
        $description = $cveSearchResponse.summary

        # Rechercher la CVE dans le fichier JSON depuis l'URL de CISA
        $jsonUrl = "https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json"
        $jsonContent = Invoke-RestMethod -Uri $jsonUrl

        $cveFound = $jsonContent.vulnerabilities | Where-Object { $_.cveID -eq $CVE }

        # Récupérer les informations de vendeur, produit et version depuis l'URL CVEAWG
        $cveAWGUrl = "https://cveawg.mitre.org/api/cve/$CVE"
        $cveAWGResponse = Invoke-RestMethod -Uri $cveAWGUrl

        $vendeur = $cveAWGResponse.containers.cna.affected[0].vendor
        $produit = $cveAWGResponse.containers.cna.affected[0].product
        $versionAffectee = $cveAWGResponse.containers.cna.affected[0].versions[0].lessThan

        # Afficher les résultats
        Write-Host "Proba. d'exp: $centilePercentage"
        Write-Host "Reference CVE: $($cveEntry.CVE)"
        Write-Host "Date de publication: $datePublication"
        Write-Host "Date de derniere modification: $dateDerniereModification"
        Write-Host "Description: $description"

        if ($cveFound) {
            # Afficher les informations de CISA
            Write-Host "Exploitation connue: $($cveFound.knownRansomwareCampaignUse)"
            if ($cveFound.knownRansomwareCampaignUse -eq "Known") {
                Write-Host "Connu pour servir actuellement dans les campagnes de ransomware ? : Positif"
            }
            elseif ($cveFound.knownRansomwareCampaignUse -eq "Unknown") {
                Write-Host "Connu pour servir actuellement dans les campagnes de ransomware ? : Negatif"
            }
            Write-Host "Date de premiere exploitation connue: $($cveFound.dateAdded)"
            Write-Host "Action recommandee: $($cveFound.requiredAction)"
            Write-Host "Notes: $($cveFound.notes)"
        } else {
            Write-Host "Exploitation connue: Non"
            # Si la CVE n'est pas trouvee, le champ "Connu pour servir actuellement dans les campagnes de ransomware ?" est indefini.
        }

        # Afficher les informations de vendeur, produit et version
        Write-Host "Vendeur : $vendeur"
        Write-Host "Produit : $produit"
        Write-Host "Version affectee : $versionAffectee"
    } else {
        Write-Host "La reference CVE n'a pas ete trouvee dans le fichier EPSS."
    }

} else {
    Write-Host "Format de reference CVE invalide. Le format doit etre 'CVE-xxxx-yyyy'."
}

Write-Host "Fin du script."
